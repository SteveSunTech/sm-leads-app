{"ast":null,"code":"import axios from 'axios';\n\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['x-auth-token'] = token;\n    console.log(token);\n  } else {\n    delete axios.defaults.headers.common['x-auth-token']; // console.log('delete')\n  } // Default config options\n\n\n  const defaultOptions = {\n    // baseURL: <CHANGE-TO-URL>,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }; // Create instance\n\n  let instance = axios.create(defaultOptions); // Set the AUTH token for any request\n\n  instance.interceptors.request.use(function (config) {\n    const token = localStorage.getItem('token');\n    config.headers.Authorization = token ? `Bearer ${token}` : '';\n    return config;\n  });\n};\n\nexport default setAuthToken;","map":{"version":3,"sources":["/Users/mingkun/Desktop/student medicover/salesApp/client/src/utils/setAuthToken.js"],"names":["axios","setAuthToken","token","defaults","headers","common","console","log","defaultOptions","instance","create","interceptors","request","use","config","localStorage","getItem","Authorization"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,MAAIA,KAAJ,EAAW;AACTF,IAAAA,KAAK,CAACG,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,cAA9B,IAAgDH,KAAhD;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACD,GAHD,MAGO;AACL,WAAOF,KAAK,CAACG,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,cAA9B,CAAP,CADK,CAEL;AACD,GAP2B,CAS5B;;;AACA,QAAMG,cAAc,GAAG;AACrB;AACAJ,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAFY,GAAvB,CAV4B,CAiB5B;;AACA,MAAIK,QAAQ,GAAGT,KAAK,CAACU,MAAN,CAAaF,cAAb,CAAf,CAlB4B,CAoB5B;;AACAC,EAAAA,QAAQ,CAACE,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkC,UAAUC,MAAV,EAAkB;AAClD,UAAMZ,KAAK,GAAGa,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAF,IAAAA,MAAM,CAACV,OAAP,CAAea,aAAf,GAAgCf,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB,EAA5D;AACA,WAAOY,MAAP;AACD,GAJD;AAKD,CA1BD;;AA4BA,eAAeb,YAAf","sourcesContent":["import axios from 'axios';\n\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['x-auth-token'] = token;\n    console.log(token);\n  } else {\n    delete axios.defaults.headers.common['x-auth-token'];\n    // console.log('delete')\n  }\n\n  // Default config options\n  const defaultOptions = {\n    // baseURL: <CHANGE-TO-URL>,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  // Create instance\n  let instance = axios.create(defaultOptions);\n\n  // Set the AUTH token for any request\n  instance.interceptors.request.use(function (config) {\n    const token = localStorage.getItem('token');\n    config.headers.Authorization =  token ? `Bearer ${token}` : '';\n    return config;\n  });\n}\n\nexport default setAuthToken;"]},"metadata":{},"sourceType":"module"}