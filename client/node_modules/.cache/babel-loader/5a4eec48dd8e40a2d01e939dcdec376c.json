{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from './alert';\nimport { WECHAT_NEW } from './types'; // Lookup wechat from database\n\nexport const single = wechat => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    wechat\n  });\n\n  try {\n    const res = await axios.post('/api/basic/single', body, config);\n    console.log(res);\n  } catch (err) {\n    console.log(err);\n  }\n}; // Upload wechat client to database\n\nexport const upload = (wechat, status) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    wechat,\n    status\n  });\n\n  try {\n    const res = await axios.post('/api/basic/new', body, config);\n    const payload = res.data.wechatNew;\n    dispatch({\n      type: WECHAT_NEW,\n      payload\n    });\n    dispatch(setAlert(`“微信：${payload.wechatId}，状态：${payload.status}” 上传成功！`, 'success'));\n  } catch (err) {\n    console.log(err);\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'error')));\n    }\n  }\n}; // get all wechat lead account belong to current user\n\nexport const get = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/basic/get');\n    const payload = res.data.wechatNew;\n    dispatch({\n      type: WECHAT_NEW,\n      payload\n    });\n    dispatch(setAlert(`“微信：${payload.wechatId}，状态：${payload.status}” 上传成功！`, 'success'));\n  } catch (err) {\n    console.log(err);\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'error')));\n    }\n  }\n};","map":{"version":3,"sources":["/Users/mingkun/Desktop/student medicover/salesApp/client/src/actions/basic.js"],"names":["axios","setAlert","WECHAT_NEW","single","wechat","dispatch","config","headers","body","JSON","stringify","res","post","console","log","err","upload","status","payload","data","wechatNew","type","wechatId","errors","response","forEach","error","msg","get"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { setAlert } from './alert'\n\nimport {\n  WECHAT_NEW\n} from './types';\n\n// Lookup wechat from database\nexport const single = ( wechat ) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }\n\n  const body = JSON.stringify({ wechat });\n\n  try {\n    const res = await axios.post('/api/basic/single', body, config)\n    console.log(res);\n\n  } catch (err) {\n    console.log(err);\n  }\n}\n\n// Upload wechat client to database\nexport const upload = ( wechat, status ) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }\n\n  const body = JSON.stringify({ wechat, status });\n\n  try {\n    const res = await axios.post('/api/basic/new', body, config)\n    const payload = res.data.wechatNew\n\n    dispatch({\n      type: WECHAT_NEW,\n      payload\n    })\n\n    dispatch(\n      setAlert(`“微信：${payload.wechatId}，状态：${payload.status}” 上传成功！`, 'success')\n    )\n\n\n  } catch (err) {\n    console.log(err)\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'error')));\n    }\n  }\n}\n\n// get all wechat lead account belong to current user\nexport const get = () => async dispatch => {\n \n  try {\n    const res = await axios.get('/api/basic/get')\n    const payload = res.data.wechatNew\n\n    dispatch({\n      type: WECHAT_NEW,\n      payload\n    })\n\n    dispatch(\n      setAlert(`“微信：${payload.wechatId}，状态：${payload.status}” 上传成功！`, 'success')\n    )\n\n\n  } catch (err) {\n    console.log(err)\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'error')));\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}