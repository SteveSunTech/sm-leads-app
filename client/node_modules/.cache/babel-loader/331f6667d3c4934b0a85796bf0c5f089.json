{"ast":null,"code":"import axios from 'axios';\n\nconst setAuthToken = token => {\n  // if (token) {\n  //   axios.defaults.headers.common['x-auth-token'] = token;\n  //   console.log(token);\n  // } else {\n  //   delete axios.defaults.headers.common['x-auth-token'];\n  //   // console.log('delete')\n  // }\n  // // Default config options\n  // const defaultOptions = {\n  //   // baseURL: <CHANGE-TO-URL>,\n  //   headers: {\n  //     'Content-Type': 'application/json',\n  //   },\n  // };\n  // // Create instance\n  // let instance = axios.create(defaultOptions);\n  // // Set the AUTH token for any request\n  // instance.interceptors.request.use(function (config) {\n  //   const token = localStorage.getItem('token');\n  //   config.headers.Authorization =  token ? `Bearer ${token}` : '';\n  //   return config;\n  // });\n  // Add a request interceptor\n  axios.interceptors.request.use(function (config) {\n    const token = store.getState().session.token;\n    config.headers.Authorization = token;\n    return config;\n  });\n};\n\nexport default setAuthToken;","map":{"version":3,"sources":["/Users/mingkun/Desktop/student medicover/salesApp/client/src/utils/setAuthToken.js"],"names":["axios","setAuthToken","token","interceptors","request","use","config","store","getState","session","headers","Authorization"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACFF,EAAAA,KAAK,CAACG,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,UAAUC,MAAV,EAAkB;AAC/C,UAAMJ,KAAK,GAAGK,KAAK,CAACC,QAAN,GAAiBC,OAAjB,CAAyBP,KAAvC;AACAI,IAAAA,MAAM,CAACI,OAAP,CAAeC,aAAf,GAAgCT,KAAhC;AAEA,WAAOI,MAAP;AACD,GALD;AAMC,CAlCD;;AAoCA,eAAeL,YAAf","sourcesContent":["import axios from 'axios';\n\nconst setAuthToken = token => {\n  // if (token) {\n  //   axios.defaults.headers.common['x-auth-token'] = token;\n  //   console.log(token);\n  // } else {\n  //   delete axios.defaults.headers.common['x-auth-token'];\n  //   // console.log('delete')\n  // }\n\n  // // Default config options\n  // const defaultOptions = {\n  //   // baseURL: <CHANGE-TO-URL>,\n  //   headers: {\n  //     'Content-Type': 'application/json',\n  //   },\n  // };\n\n  // // Create instance\n  // let instance = axios.create(defaultOptions);\n\n  // // Set the AUTH token for any request\n  // instance.interceptors.request.use(function (config) {\n  //   const token = localStorage.getItem('token');\n  //   config.headers.Authorization =  token ? `Bearer ${token}` : '';\n  //   return config;\n  // });\n  \n  // Add a request interceptor\naxios.interceptors.request.use(function (config) {\n  const token = store.getState().session.token;\n  config.headers.Authorization =  token;\n\n  return config;\n});\n}\n\nexport default setAuthToken;"]},"metadata":{},"sourceType":"module"}