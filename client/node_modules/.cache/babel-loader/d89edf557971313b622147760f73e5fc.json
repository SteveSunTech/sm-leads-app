{"ast":null,"code":"import axios from '../apis/smCovered';\nimport { setAlert } from './alert';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from './types';\nimport setAuthToken from '../utils/setAuthToken'; // Load User\n\nexport const loadUser = () => async dispatch => {\n  // if (localStorage.token) {\n  //   // console.log(localStorage.token)\n  //   setAuthToken(localStorage.token);\n  // }\n  try {\n    await setAuthToken(localStorage.token); // axios.defaults.headers.common['x-auth-token'] = localStorage.token\n\n    console.log(axios.defaults.headers.common);\n    const res = await axios.get('/api/auth'); // @yuchen 最开始程序死在这里了; 现在改好了\n    // console.log(axios.defaults.headers.common);\n    // const res = await axios.get('/api/auth', {headers: { Authoization}})\n    // console.log(res);\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}; // Register User\n\nexport const register = ({\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'error')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n}; // Login User\n\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('/api/auth/login', body, config); // console.log(res)\n\n    await dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    console.log(err);\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'error')));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n}; // Logout User\n\nexport const logout = () => dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"sources":["/Users/mingkun/Desktop/student medicover/salesApp/client/src/actions/auth.js"],"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","setAuthToken","loadUser","dispatch","localStorage","token","console","log","defaults","headers","common","res","get","type","payload","data","err","register","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","msg","login","logout"],"mappings":"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","sourcesContent":["import axios from '../apis/smCovered';\nimport { setAlert } from './alert'\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT\n} from './types';\nimport setAuthToken from '../utils/setAuthToken'\n\n\n// Load User\nexport const loadUser = () => async dispatch => {\n  // if (localStorage.token) {\n  //   // console.log(localStorage.token)\n  //   setAuthToken(localStorage.token);\n  // }\n\n\n  try {\n    await setAuthToken(localStorage.token);\n    // axios.defaults.headers.common['x-auth-token'] = localStorage.token\n    console.log(axios.defaults.headers.common);\n\n    const res = await axios.get('/api/auth')  // @yuchen 最开始程序死在这里了; 现在改好了\n\n    // console.log(axios.defaults.headers.common);\n\n    // const res = await axios.get('/api/auth', {headers: { Authoization}})\n\n    // console.log(res);\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    })\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    })\n  }\n}\n\n// Register User\nexport const register = ({ email, password }) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }\n\n  const body = JSON.stringify({ email, password});\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n\n    dispatch(loadUser());\n\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'error')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n}\n\n// Login User\nexport const login = ( email, password ) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }\n\n  const body = JSON.stringify({ email, password});\n\n  try {\n    const res = await axios.post('/api/auth/login', body, config);\n\n    // console.log(res)\n\n    await dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n\n    dispatch(loadUser());\n\n  } catch (err) {\n    console.log(err)\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'error')));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n}\n\n// Logout User\nexport const logout = () => dispatch => {\n  dispatch({ type: LOGOUT })\n}"]},"metadata":{},"sourceType":"module"}