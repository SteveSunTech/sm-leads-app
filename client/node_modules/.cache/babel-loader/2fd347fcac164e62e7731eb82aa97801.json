{"ast":null,"code":"var _jsxFileName = \"/Users/mingkun/Desktop/student medicover/salesApp/client/src/components/ambassador/dashboard.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux'; // import TextField from '@material-ui/core/TextField';\n// import Button from '@material-ui/core/Button';\n\nimport { makeStyles } from '@material-ui/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { get } from '../../actions/basic';\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\n\nfunction createData(id, college, group, wechat, status) {\n  return {\n    id,\n    college,\n    group,\n    wechat,\n    status\n  };\n}\n\nconst Dashboard = ({\n  wechats,\n  get\n}) => {\n  const [value, setValue] = useState([]);\n  const rows = [];\n  useEffect(() => {\n    get().then(function (data) {\n      console.log(data);\n      data.forEach(e => {\n        rows.push(createData(e.id, e.collegeDisplay, e.groupDisplay, e.wechatId, e.status));\n        console.log(rows);\n        setValue(rows);\n      });\n    });\n  }, [wechats]);\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"id\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"\\u5B66\\u6821\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"\\u7FA4\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"\\u5FAE\\u4FE1\\u53F7\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"\\u72B6\\u6001\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, value.map(row => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, row.id), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, row.college), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, row.group), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, row.wechatId), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, row.status))))));\n};\n\nconst mapStateToProps = state => ({\n  wechats: state.basicWeChat\n});\n\nexport default connect(mapStateToProps, {\n  get\n})(Dashboard);","map":{"version":3,"sources":["/Users/mingkun/Desktop/student medicover/salesApp/client/src/components/ambassador/dashboard.js"],"names":["React","useEffect","useState","connect","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","get","useStyles","table","minWidth","createData","id","college","group","wechat","status","Dashboard","wechats","value","setValue","rows","then","data","console","log","forEach","e","push","collegeDisplay","groupDisplay","wechatId","classes","map","row","mapStateToProps","state","basicWeChat"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux';\n\n// import TextField from '@material-ui/core/TextField';\n// import Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport { get } from '../../actions/basic';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction createData(id, college, group, wechat, status) {\n  return { id, college, group, wechat, status };\n}\n\nconst Dashboard = ({ wechats, get }) => {\n  const [value, setValue] = useState([])\n\n  const rows = [];\n  useEffect(() => {\n    get().then(function(data) {\n      console.log(data)\n      data.forEach(e => {\n        rows.push(createData(e.id, e.collegeDisplay, e.groupDisplay, e.wechatId, e.status))\n        console.log(rows)\n        setValue(rows)\n      });\n    })\n  }, [ wechats ])\n\n\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>id</TableCell>\n            <TableCell align='center'>学校</TableCell>\n            <TableCell >群</TableCell>\n            <TableCell >微信号</TableCell>\n            <TableCell >状态</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {value.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.id}\n              </TableCell>\n              <TableCell align='center'>{row.college}</TableCell>\n              <TableCell >{row.group}</TableCell>\n              <TableCell >{row.wechatId}</TableCell>\n              <TableCell >{row.status}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  wechats: state.basicWeChat\n})\n\nexport default connect( mapStateToProps, { get } )(Dashboard)"]},"metadata":{},"sourceType":"module"}