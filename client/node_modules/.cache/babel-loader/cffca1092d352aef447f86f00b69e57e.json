{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from './subAlert'; // import {\n//   WECHAT_NEW\n// } from './types';\n// // Lookup wechat from database\n// export const single = ( wechat ) => async dispatch => {\n//   const config = {\n//     headers: {\n//       'Content-Type': 'application/json'\n//     }\n//   }\n//   const body = JSON.stringify({ wechat });\n//   try {\n//     const res = await axios.post('/api/basic/single', body, config)\n//     console.log(res);\n//   } catch (err) {\n//     console.log(err);\n//   }\n// }\n// Upload wechat client to database\n\nexport const newBasic = (wechat, status) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    wechat,\n    status\n  });\n\n  try {\n    const res = await axios.post('/api/basic/new', body, config);\n    const payload = res.data.wechatNew;\n    dispatch({\n      type: WECHAT_NEW,\n      payload\n    });\n    dispatch(setAlert(`“微信：${payload.wechatId}，状态：${payload.status}” 上传成功！`, 'success'));\n  } catch (err) {\n    console.log(err);\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'error')));\n    }\n  }\n}; // get all wechat lead account belong to current user\n\nexport const get = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/basic/get'); // console.log(res.data.wechats)\n\n    return new Promise(resolve => {\n      resolve(res.data.wechats);\n    });\n  } catch (err) {\n    console.log(err);\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'error')));\n    }\n  }\n};","map":{"version":3,"sources":["/Users/mingkun/Desktop/student medicover/salesApp/client/src/actions/am.js"],"names":["axios","setAlert","newBasic","wechat","status","dispatch","config","headers","body","JSON","stringify","res","post","payload","data","wechatNew","type","WECHAT_NEW","wechatId","err","console","log","errors","response","forEach","error","msg","get","Promise","resolve","wechats"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,YAAzB,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,CAAEC,MAAF,EAAUC,MAAV,KAAsB,MAAMC,QAAN,IAAkB;AAC9D,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAMA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEP,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAf,CAAb;;AAEA,MAAI;AACF,UAAMO,GAAG,GAAG,MAAMX,KAAK,CAACY,IAAN,CAAW,gBAAX,EAA6BJ,IAA7B,EAAmCF,MAAnC,CAAlB;AACA,UAAMO,OAAO,GAAGF,GAAG,CAACG,IAAJ,CAASC,SAAzB;AAEAV,IAAAA,QAAQ,CAAC;AACPW,MAAAA,IAAI,EAAEC,UADC;AAEPJ,MAAAA;AAFO,KAAD,CAAR;AAKAR,IAAAA,QAAQ,CACNJ,QAAQ,CAAE,OAAMY,OAAO,CAACK,QAAS,OAAML,OAAO,CAACT,MAAO,SAA9C,EAAwD,SAAxD,CADF,CAAR;AAKD,GAdD,CAcE,OAAOe,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,UAAMG,MAAM,GAAGH,GAAG,CAACI,QAAJ,CAAaT,IAAb,CAAkBQ,MAAjC;;AAEA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAIpB,QAAQ,CAACJ,QAAQ,CAACwB,KAAK,CAACC,GAAP,EAAY,OAAZ,CAAT,CAAhC;AACD;AACF;AACF,CA/BM,C,CAiCP;;AACA,OAAO,MAAMC,GAAG,GAAG,MAAM,MAAMtB,QAAN,IAAkB;AAEzC,MAAI;AACF,UAAMM,GAAG,GAAG,MAAMX,KAAK,CAAC2B,GAAN,CAAU,gBAAV,CAAlB,CADE,CAEF;;AACA,WAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC5BA,MAAAA,OAAO,CAAClB,GAAG,CAACG,IAAJ,CAASgB,OAAV,CAAP;AACD,KAFM,CAAP;AAID,GAPD,CAOE,OAAOX,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,UAAMG,MAAM,GAAGH,GAAG,CAACI,QAAJ,CAAaT,IAAb,CAAkBQ,MAAjC;;AAEA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAIpB,QAAQ,CAACJ,QAAQ,CAACwB,KAAK,CAACC,GAAP,EAAY,OAAZ,CAAT,CAAhC;AACD;AACF;AACF,CAjBM","sourcesContent":["import axios from \"axios\";\nimport { setAlert } from './subAlert'\n\n// import {\n//   WECHAT_NEW\n// } from './types';\n\n// // Lookup wechat from database\n// export const single = ( wechat ) => async dispatch => {\n//   const config = {\n//     headers: {\n//       'Content-Type': 'application/json'\n//     }\n//   }\n\n//   const body = JSON.stringify({ wechat });\n\n//   try {\n//     const res = await axios.post('/api/basic/single', body, config)\n//     console.log(res);\n\n//   } catch (err) {\n//     console.log(err);\n//   }\n// }\n\n// Upload wechat client to database\nexport const newBasic = ( wechat, status ) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }\n\n  const body = JSON.stringify({ wechat, status });\n\n  try {\n    const res = await axios.post('/api/basic/new', body, config)\n    const payload = res.data.wechatNew\n\n    dispatch({\n      type: WECHAT_NEW,\n      payload\n    })\n\n    dispatch(\n      setAlert(`“微信：${payload.wechatId}，状态：${payload.status}” 上传成功！`, 'success')\n    )\n\n\n  } catch (err) {\n    console.log(err)\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'error')));\n    }\n  }\n}\n\n// get all wechat lead account belong to current user\nexport const get = () => async dispatch => {\n\n  try {\n    const res = await axios.get('/api/basic/get')\n    // console.log(res.data.wechats)\n    return new Promise(resolve => {\n      resolve(res.data.wechats)\n    })\n\n  } catch (err) {\n    console.log(err)\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'error')));\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}